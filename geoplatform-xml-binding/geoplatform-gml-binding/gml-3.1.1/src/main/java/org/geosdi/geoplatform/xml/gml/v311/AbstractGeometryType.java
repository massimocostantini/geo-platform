//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.04.17 at 10:27:36 PM CEST 
//
package org.geosdi.geoplatform.xml.gml.v311;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.geosdi.geoplatform.gml.api.AbstractGeometry;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

/**
 * All geometry elements are derived directly or indirectly from this abstract
 * supertype. A geometry element may have an identifying attribute ("gml:id"), a
 * name (attribute "name") and a description (attribute "description"). It may
 * be associated with a spatial reference system (attribute "srsName"). The
 * following rules shall be adhered: - Every geometry type shall derive from
 * this abstract type. - Every geometry element (i.e. an element of a geometry
 * type) shall be directly or indirectly in the substitution group of _Geometry.
 *
 * <p>Java class for AbstractGeometryType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 *
 * <pre>
 * &lt;complexType name="AbstractGeometryType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml}AbstractGMLType">
 *       &lt;attGroup ref="{http://www.opengis.net/gml}SRSReferenceGroup"/>
 *       &lt;attribute name="gid" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractGeometryType")
@XmlSeeAlso({
    GeometricComplexType.class,
    GridType.class,
    AbstractRingType.class,
    AbstractGeometricPrimitiveType.class,
    AbstractGeometricAggregateType.class
})
public abstract class AbstractGeometryType extends AbstractGMLType
        implements ToString, AbstractGeometry {

    @XmlAttribute(name = "gid")
    protected String gid;
    @XmlAttribute(name = "srsName")
    @XmlSchemaType(name = "anyURI")
    protected String srsName;
    @XmlAttribute(name = "srsDimension")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger srsDimension;
    @XmlAttribute(name = "axisLabels")
    protected List<String> axisLabels;
    @XmlAttribute(name = "uomLabels")
    protected List<String> uomLabels;

    /**
     * Gets the value of the gid property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getGid() {
        return gid;
    }

    /**
     * Sets the value of the gid property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setGid(String value) {
        this.gid = value;
    }

    public boolean isSetGid() {
        return (this.gid != null);
    }

    /**
     * Gets the value of the srsName property.
     *
     * @return possible object is {@link String }
     *
     */
    @Override
    public String getSrsName() {
        return srsName;
    }

    /**
     * Sets the value of the srsName property.
     *
     * @param value allowed object is {@link String }
     *
     */
    @Override
    public void setSrsName(String value) {
        this.srsName = value;
    }

    @Override
    public boolean isSetSrsName() {
        return (this.srsName != null);
    }

    /**
     * Gets the value of the srsDimension property.
     *
     * @return possible object is {@link BigInteger }
     *
     */
    @Override
    public BigInteger getSrsDimension() {
        return srsDimension;
    }

    /**
     * Sets the value of the srsDimension property.
     *
     * @param value allowed object is {@link BigInteger }
     *
     */
    public void setSrsDimension(BigInteger value) {
        this.srsDimension = value;
    }

    @Override
    public boolean isSetSrsDimension() {
        return (this.srsDimension != null);
    }

    /**
     * Gets the value of the axisLabels property.
     *
     * <p> This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the axisLabels property.
     *
     * <p> For example, to add a new item, do as follows:
     * <pre>
     *    getAxisLabels().add(newItem);
     * </pre>
     *
     *
     * <p> Objects of the following type(s) are allowed in the list
     * {@link String }
     *
     *
     */
    @Override
    public List<String> getAxisLabels() {
        if (axisLabels == null) {
            axisLabels = new ArrayList<String>();
        }
        return this.axisLabels;
    }

    @Override
    public boolean isSetAxisLabels() {
        return ((this.axisLabels != null) && (!this.axisLabels.isEmpty()));
    }

    public void unsetAxisLabels() {
        this.axisLabels = null;
    }

    /**
     * Gets the value of the uomLabels property.
     *
     * <p> This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the uomLabels property.
     *
     * <p> For example, to add a new item, do as follows:
     * <pre>
     *    getUomLabels().add(newItem);
     * </pre>
     *
     *
     * <p> Objects of the following type(s) are allowed in the list
     * {@link String }
     *
     *
     */
    @Override
    public List<String> getUomLabels() {
        if (uomLabels == null) {
            uomLabels = new ArrayList<String>();
        }
        return this.uomLabels;
    }

    @Override
    public boolean isSetUomLabels() {
        return ((this.uomLabels != null) && (!this.uomLabels.isEmpty()));
    }

    public void unsetUomLabels() {
        this.uomLabels = null;
    }

    @Override
    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator,
            StringBuilder buffer,
            ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator,
            StringBuilder buffer,
            ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            String theGid;
            theGid = this.getGid();
            strategy.appendField(locator, this, "gid", buffer, theGid);
        }
        {
            String theSrsName;
            theSrsName = this.getSrsName();
            strategy.appendField(locator, this, "srsName", buffer, theSrsName);
        }
        {
            BigInteger theSrsDimension;
            theSrsDimension = this.getSrsDimension();
            strategy.appendField(locator, this, "srsDimension", buffer,
                    theSrsDimension);
        }
        {
            List<String> theAxisLabels;
            theAxisLabels = (this.isSetAxisLabels() ? this.getAxisLabels() : null);
            strategy.appendField(locator, this, "axisLabels", buffer,
                    theAxisLabels);
        }
        {
            List<String> theUomLabels;
            theUomLabels = (this.isSetUomLabels() ? this.getUomLabels() : null);
            strategy.appendField(locator, this, "uomLabels", buffer,
                    theUomLabels);
        }
        return buffer;
    }

    public void setAxisLabels(List<String> value) {
        this.axisLabels = null;
        List<String> draftl = this.getAxisLabels();
        draftl.addAll(value);
    }

    public void setUomLabels(List<String> value) {
        this.uomLabels = null;
        List<String> draftl = this.getUomLabels();
        draftl.addAll(value);
    }
}
